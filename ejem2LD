import numpy as np
import skfuzzy as fuzz
from skfuzzy import control as ctrl
import matplotlib.pyplot as plt

# -------------------------------
# 1️⃣ Definir las variables difusas
# -------------------------------
temperatura = ctrl.Antecedent(np.arange(0, 41, 1), 'temperatura')
velocidad = ctrl.Consequent(np.arange(0, 101, 1), 'velocidad')

# -------------------------------
# 2️⃣ Definir funciones de pertenencia
# -------------------------------
temperatura['frio'] = fuzz.trimf(temperatura.universe, [0, 0, 20])
temperatura['templado'] = fuzz.trimf(temperatura.universe, [15, 25, 35])
temperatura['caluroso'] = fuzz.trimf(temperatura.universe, [30, 40, 40])

velocidad['baja'] = fuzz.trimf(velocidad.universe, [0, 0, 40])
velocidad['media'] = fuzz.trimf(velocidad.universe, [30, 50, 70])
velocidad['alta'] = fuzz.trimf(velocidad.universe, [60, 100, 100])

# -------------------------------
# 3️⃣ Definir las reglas difusas
# -------------------------------
rule1 = ctrl.Rule(temperatura['frio'], velocidad['baja'])
rule2 = ctrl.Rule(temperatura['templado'], velocidad['media'])
rule3 = ctrl.Rule(temperatura['caluroso'], velocidad['alta'])

# -------------------------------
# 4️⃣ Crear el sistema de control
# -------------------------------
control_ventilador = ctrl.ControlSystem([rule1, rule2, rule3])
simulador = ctrl.ControlSystemSimulation(control_ventilador)

# -------------------------------
# 5️⃣ Probar con un valor de temperatura
# -------------------------------
entrada = 29  # Temperatura en °C
simulador.input['temperatura'] = entrada
simulador.compute()

print(f"Temperatura: {entrada}°C")
print(f"Velocidad difusa sugerida: {simulador.output['velocidad']:.2f}%")

# -------------------------------
# 6️⃣ Visualizar resultado
# -------------------------------
velocidad.view(simulador)
plt.show()
